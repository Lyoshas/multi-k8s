name: CI/CD workflow

on:
  push:
    branches: [ main ]

env:
  GCLOUD_KEY_FILE_CONTENTS: ${{ secrets.GCLOUD_KEY_FILE_CONTENTS }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  # make sure gcloud doesn't require any prompts
  CLOUDSDK_CORE_DISABLE_PROMPTS: 1
  USE_GKE_GCLOUD_AUTH_PLUGIN: True

jobs:
  test_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Google Cloud SDK repo source (1/4)
        run: sudo apt-get install apt-transport-https ca-certificates gnupg
      - name: Set up Google Cloud SDK repo source (2/4)
        run: echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      - name: Set up Google Cloud SDK repo source (3/4)
        run: curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
      - name: Set up Google Cloud SDK repo source (4/4)
        run: curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo tee /usr/share/keyrings/cloud.google.gpg
      - name: Update the repo
        run: sudo apt-get update
      # - name: Install gcloud CLI (5/5)
      #   run: sudo apt-get update && sudo apt-get install google-cloud-cli
      #   run: curl https://sdk.cloud.google.com | bash > /dev/null;
      # - name: Download Google Cloud SDK (2/2)
      #   run: source $HOME/google-cloud-sdk/path.bash.inc
      # - name: Install kubectl
        # run: gcloud components update kubectl
        # run: sudo apt-get install kubectl
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      # - name: Install kubectl (1/2)
      #   run: curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      # - name: Install kubectl (2/2)
      #   run: sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      - name: Create Google Cloud authorization file
        run: echo "$GCLOUD_KEY_FILE_CONTENTS" > service-account.json
      - name: Install gke-gcloud-auth-plugin
        run: sudo apt-get install google-cloud-sdk-gke-gcloud-auth-plugin
      - name: Log in to Google Cloud
        run: gcloud auth activate-service-account --key-file service-account.json
      - name: Switch to the correct project
        run: gcloud config set project healthy-display-371312
      - name: Specify a compute zone
        run: gcloud config set compute/zone europe-central2-a
      - name: Specify a cluster
        run: gcloud container clusters get-credentials multi-cluster-2
      # - name: Install gke-gcloud-auth-plugin
        # run: sudo apt-get install google-cloud-sdk-gke-gcloud-auth-plugin
        # run: gcloud components install gke-gcloud-auth-plugin
      # - name: Run kubectl with the new plugin (1/4)
      #   run: export USE_GKE_GCLOUD_AUTH_PLUGIN=True
      # - name: Run kubectl with the new plugin (2/4)
      #   run: source ~/.bashrc
      # - name: Run kubectl with the new plugin (3/4)
      #   run: gcloud components update
      # - name: Run kubectl with the new plugin (4/4)
        # run: gcloud container clusters get-credentials multi-cluster-2
      - name: Log in to Docker Hub
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - name: Build the image
        run: docker build -t lyoshas/react-test -f ./client/Dockerfile.dev ./client
      - name: Run tests
        run: docker run -e CI=true lyoshas/react-test npm test
      - name: Create a variable that holds the value of the current git commit SHA
        run: echo "GIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
        # run: export GIT_SHA=$(git rev-parse HEAD)
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
      - name: Run a script that will deploy the project
        run: bash ./deploy.sh 

